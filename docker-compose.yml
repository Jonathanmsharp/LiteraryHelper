version: '3.8'

services:
  postgres:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    container_name: ${COMPOSE_PROJECT_NAME:-literaryhelper}-postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-literaryhelper}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./apps/frontend/db/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - literaryhelper-network

  redis:
    image: redis:${REDIS_VERSION:-7}-alpine
    container_name: ${COMPOSE_PROJECT_NAME:-literaryhelper}-redis
    env_file:
      - .env
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - literaryhelper-network

networks:
  literaryhelper-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
